import type { NextPage } from 'next';
import Head from 'next/head';
import { useMachine } from '@xstate/react';
import TicTacToeMachine from '../Machine/TicTacToeMachine';
import { Container, MainContainer, PlayerText, ResetButton, Tile, WinnerText, DrawText } from '../styles/tictactoe.styled';

const Home: NextPage = () => {
  const range = (start: number, end: number) => {
    return Array(end - start)
      .fill(null)
      .map((_, i) => i + start);
  };
  const [current, send] = useMachine(TicTacToeMachine);
  console.log(current);

  const cellClickHandler = (i: number) => {
    send({
      type: 'click',
      clickedCell: i
    });
    console.log(current.context.currentPlayer);
  };

  return (
    <div>
      <Head>
        <title>TicTacToe</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainContainer>
        {current.matches("playing") && 
        <PlayerText initial={{opacity:0.2}} animate={{opacity:1}}>
          Player {current.context.currentPlayer.toUpperCase()}
          </PlayerText>}
        <ResetButton onClick={() => send('RESET')}>Reset</ResetButton>
        <Container initial={{opacity:0.2}} animate={{opacity:1}}>
          {range(0, 9).map((i) => (
            <Tile 
              onClick={() => cellClickHandler(i)}
              data-player={current.context.cells[i]}
              key={i}
               
            />
          ))}
        </Container>
        {current.matches("finished") && 
        <WinnerText>The winner is:{current.context.winner?.toUpperCase()}</WinnerText>}
        {current.matches("draw") && <DrawText>Draw</DrawText>}
      </MainContainer>
    </div>
  );
};

export default Home;
